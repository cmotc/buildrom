# Support for the AMD Herring Platform

#### Platform configuration

CC=gcc
STRIP=strip
AS=as

ifeq ($(CONFIG_TARGET_64BIT),y)
TARGET_ARCH=x86_64
CFLAGS_platform =
else
TARGET_ARCH=i686
CFLAGS_platform =
endif

# Targets

KERNEL_MK=$(PACKAGE_DIR)/kernel/dbm690t.mk
CBV2_MK=$(PACKAGE_DIR)/coreboot-v2/dbm690t.mk

# kernel configuration (for LAB)

ifeq ($(CONFIG_TARGET_64BIT),y)
KERNEL_VERSION=2.6.22.2
KERNEL_MK=$(PACKAGE_DIR)/kernel/dbm690t-x86_64.mk
KERNEL_CONFIG=$(PACKAGE_DIR)/kernel/conf/defconfig-dbm690t-x86_64
BUSYBOX_CONFIG=defconfig-dbm690t-x86_64
UCLIBC_VER=0.9.29
UCLIBC_CONFIG=defconfig-x86_64
else
KERNEL_VERSION=2.6.20.2
KERNEL_CONFIG=$(PACKAGE_DIR)/kernel/conf/defconfig-dbm690t
UCLIBC_VER=0.9.29
endif

#UCLIBC_ARCH=$(TARGET_ARCH)

# Etherboot configuration
ETHERBOOT_ARCH=i386

# coreboot configuration

COREBOOT_VENDOR=amd
CBV2_CONFIG=Config.lb
CBV2_PAYLOAD_FILE_EXT=elf

CBV3_TAG=HEAD

COREBOOT_BOARD=dbm690t
CBV2_TDIR=dbm690t
CBV2_TAG=3590

# Tell construct-rom.sh to pad the ROM to a power of 2
PLATFORM_DOPAD := -p

# FILO configuration

FILO_CONFIG=dbm690t-Config

# VIDEO BIOS configuration

ifeq ($(CONFIG_AMD_R690_CUSTOM_VBIOS),y)
AMD_R690_VBIOS_LOCATION = $(subst ",,$(CONFIG_AMD_R690_VBIOS))
else
AMD_R690_VBIOS_LOCATION := $(BASE_DIR)/sources/amd_rs690_vbios.bin
endif
