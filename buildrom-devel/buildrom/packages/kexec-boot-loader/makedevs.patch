Index: kexec-boot-loader/main.c
===================================================================
--- kexec-boot-loader.orig/main.c	2006-06-26 21:41:34.000000000 -0600
+++ kexec-boot-loader/main.c	2006-06-26 21:48:21.000000000 -0600
@@ -1,5 +1,8 @@
 #include <stdio.h>
 #include <sys/mount.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <unistd.h>
 #include <errno.h>
 #include "ui.h"
 #include "mount.h"
@@ -20,6 +23,77 @@
 	return do_mount(0, "/proc", "proc");
 }
 
+#define iseol(_c) ((_c == '\n') || (_c == 0))
+#define isspace(_c) ((_c == ' ') || (_c == '\t'))
+
+/* Make a series of devices based on a file (the same format as makedevs) */
+
+int makedevs(const char *filename) {
+
+  char *argv[10];
+  char buffer[128];
+
+  int i;
+  FILE *stream = fopen(filename, "r");
+
+  if (stream == NULL)
+    return -1;
+
+  while(!feof(stream)) {
+    char *str = fgets(buffer, sizeof(buffer) - 1, stream);
+
+    if (str == NULL)
+      continue;
+
+    for(i = 0; i < 10; i++) {
+      argv[i] = str;
+      for( ; !isspace(*str) && !iseol(*str); str++);
+
+      if (iseol(*str))
+	  break;
+
+      *str++ = 0;
+
+      for( ;isspace(*str) && !iseol(*str); str++);
+
+      if (iseol(*str))
+	break;
+    }
+
+    /* The first 4 columns need to be there */
+
+    if (i < 2)
+      continue;
+
+    /* Note - everything is created as 0 0, regardless of what is specified */
+
+    if (*argv[1] == 'd' ) {
+      mode_t mode = atoi(argv[2]);
+      if (mkdir(argv[0], mode))
+	print("Couldn't make directory %s\n", argv[0]);
+    }
+    else if (*argv[1] == 'c' || *argv[1] == 'b') {
+      if (i >= 6) {
+	mode_t mode = atoi(argv[2]);
+
+	int major = atoi(argv[5]);
+	int minor = atoi(argv[6]);
+
+	if (*argv[2] == 'b')
+	  mode |= S_IFBLK;
+	else
+	  mode |= S_IFCHR;
+
+	if (mknod(argv[0], mode, major << 8 | minor))
+	  print("Couldn't make nod %s(%d,%d)\n", argv[0], major, minor);
+      }
+    }
+  }
+
+  fclose(stream);
+  return 0;
+}
+
 int main (void)
 {
 	int ret;
@@ -27,6 +101,7 @@
 	print("Kexec boot loader\n\n");
 
 	mount_proc();
+	makedevs("/device.txt");
 
 	create_mountpath(mntpoint);
 
